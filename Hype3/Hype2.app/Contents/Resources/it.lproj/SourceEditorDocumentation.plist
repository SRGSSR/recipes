<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>CategoryName</key>
		<string>Variabili di sostituzione</string>
		<key>items</key>
		<array>
			<dict>
				<key>title</key>
				<string>${resourcesFolderName}</string>
				<key>heading</key>
				<string>${resourcesFolderName}</string>
				<key>description</key>
				<string>Una variabile di sostituzione per la cartella di risorse del documento. Da utilizzare per fare riferimento ai documenti aggiunti mediante la libreria di risorse.&lt;br&gt;&lt;br&gt;Se ad esempio è stato aggiunto jquery-1.8.2.min.js al proprio documento dalla libreria di risorse, la riga seguente importerà jQuery 1.8.2 nel documento di Hype, permettendo di utilizzare jQuery per l&apos;anteprima del documento:&lt;div class=&quot;constants&quot;&gt;&lt;script src=&quot;${resourcesFolderName}/jquery-1.8.2.min.js&quot;&gt;&lt;/script&gt;&lt;/div&gt;</string>
				<key>moreInfoUrlPath</key>
				<string>resources/#referencing</string>
			</dict>
		</array>
	</dict>
	<dict>
		<key>CategoryName</key>
		<string>Documento</string>
		<key>items</key>
		<array>
			<dict>
				<key>title</key>
				<string>hypeDocument.documentName()</string>
				<key>heading</key>
				<string>hypeDocument.documentName()</string>
				<key>description</key>
				<string>Restituisce il nome del documento. Questo valore può essere utilizzato in HYPE.documents[nomeDocumento].</string>
				<key>moreInfoUrlPath</key>
				<string>#documentName</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.documentId()</string>
				<key>heading</key>
				<string>hypeDocument.documentId()</string>
				<key>description</key>
				<string>Restituisce l&apos;ID del div contenitore del documento. Questo valore può essere utilizzato con document.getElementId() per recuperare l&apos;elemento contenitore stesso.</string>
				<key>moreInfoUrlPath</key>
				<string>#documentId</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.resourcesFolderURL()</string>
				<key>heading</key>
				<string>hypeDocument.resourcesFolderURL()</string>
				<key>description</key>
				<string>Restituisce il valore della stringa per l&apos;URL della cartella di risorse del documento. Da utilizzare per fare riferimento alle risorse aggiunte mediante la libreria delle risorse.</string>
				<key>moreInfoUrlPath</key>
				<string>#resourcesFolderURL</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.functions()</string>
				<key>heading</key>
				<string>hypeDocument.functions()</string>
				<key>description</key>
				<string>Restituisce una matrice di tutte le funzioni JavaScript definite dall&apos;utente nel documento di Tumult Hype.</string>
				<key>moreInfoUrlPath</key>
				<string>#functions</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.getElementById()</string>
				<key>heading</key>
				<string>hypeDocument.getElementById(id)</string>
				<key>description</key>
				<string>Cerca nel documento corrente l&apos;ID specificato (immesso mediante l&apos;ID univoco dell&apos;elemento delle impostazioni identità) e restituisce l&apos;elemento HTML DOM. È simile a &quot;document.getElementById&quot;; tuttavia è necessario utilizzare la versione API poiché Tumult Hype potrebbe riassegnare gli ID in caso di conflitto.</string>
				<key>codeInsertion</key>
				<string>hypeDocument.getElementById(&apos;id&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#getElementById</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.getElementProperty()</string>
				<key>heading</key>
				<string>hypeDocument.getElementProperty(element, propertyName)</string>
				<key>description</key>
				<string>Ottiene una proprietà di un elemento in base alla conoscenza del runtime di Hype.  &lt;br&gt;&lt;br&gt;L&apos;argomento dell&apos;elemento deve essere un elemento DOM, generalmente ottenuto dalla funzione hypeDocument.getElementById(). &lt;br&gt;&lt;br&gt;Nomi di proprietà validi (virgolette necessarie): &lt;div class=&apos;constants&apos;&gt;&apos;top&apos;&lt;br&gt;&apos;left&apos;&lt;br&gt;&apos;width&apos;&lt;br&gt;&apos;height&apos;&lt;br&gt;&apos;rotateZ&apos;&lt;br&gt;&apos;scaleX&apos;&lt;br&gt;&apos;scaleY&apos;&lt;br&gt;&apos;opacity&apos;&lt;br&gt;&apos;z-index&apos;&lt;br&gt;&apos;background-image&apos;&lt;/div&gt;</string>
				<key>codeInsertion</key>
				<string>hypeDocument.getElementProperty(element, &apos;propertyName&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#getElementProperty</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.setElementProperty()</string>
				<key>heading</key>
				<string>hypeDocument.setElementProperty(element, propertyName, value, optionalDuration, optionalTimingFunctionName)</string>
				<key>description</key>
				<string>Imposta una proprietà di un elemento in modo compatibile con il runtime di Hype.  Se optionalDuration è specificato, eseguirà un&apos;animazione di transizione dal valore corrente al valore specificato. &lt;br&gt;&lt;br&gt;L&apos;argomento dell&apos;elemento deve essere un elemento DOM, generalmente ottenuto dalla funzione hypeDocument.getElementById(). &lt;br&gt;&lt;br&gt;Nomi di proprietà validi (virgolette necessarie): &lt;div class=&apos;constants&apos;&gt;&apos;top&apos;&lt;br&gt;&apos;left&apos;&lt;br&gt;&apos;width&apos;&lt;br&gt;&apos;height&apos;&lt;br&gt;&apos;rotateZ&apos;&lt;br&gt;&apos;scaleX&apos;&lt;br&gt;&apos;scaleY&apos;&lt;br&gt;&apos;opacity&apos;&lt;br&gt;&apos;z-index&apos;&lt;br&gt;&apos;background-image&apos;&lt;/div&gt;optionalDuration è fornito in secondi; il valore di default è 0.&lt;br&gt;&lt;br&gt;optionalTimingFunction verrà impostato sul valore di default &quot;easeinout&quot; se non specificato. Nomi di funzione di intervallo validi (virgolette necessarie): &lt;div class=&apos;constants&apos;&gt;&apos;easeinout&apos;&lt;br&gt;&apos;easein&apos;&lt;br&gt;&apos;easeout&apos;&lt;br&gt;&apos;linear&apos;&lt;/div&gt;</string>
				<key>codeInsertion</key>
				<string>hypeDocument.setElementProperty(element, &apos;propertyName&apos;, value, 1.0, &apos;easeinout&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#setElementProperty</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.relayoutIfNecessary()</string>
				<key>heading</key>
				<string>hypeDocument.relayoutIfNecessary()</string>
				<key>description</key>
				<string>Dice esplicitamente al documento di ridisporre tutti gli elementi e i gruppi per la scena corrente nel caso si utilizzi un layout flessibile.  Da utilizzare se sono state modificate esternamente le dimensioni del contenitore principale.</string>
				<key>moreInfoUrlPath</key>
				<string>#relayoutIfNecessary</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.triggerCustomBehaviorNamed()</string>
				<key>heading</key>
				<string>hypeDocument.triggerCustomBehaviorNamed(customBehaviorName)</string>
				<key>description</key>
				<string>Informa un qualsiasi elemento con comportamento personalizzato con customBehaviorName di eseguire le proprie azioni.</string>
				<key>codeInsertion</key>
				<string>hypeDocument.triggerCustomBehaviorNamed(&apos;customBehaviorName&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#triggerCustomBehaviorNamed</string>
				<key>proOnly</key>
				<true/>
			</dict>
		</array>
	</dict>
	<dict>
		<key>CategoryName</key>
		<string>Scene</string>
		<key>items</key>
		<array>
			<dict>
				<key>title</key>
				<string>hypeDocument.sceneNames()</string>
				<key>heading</key>
				<string>hypeDocument.sceneNames()</string>
				<key>description</key>
				<string>Restituisce l&apos;elenco di tutte le scene del documento. Nota: i nomi delle scene non devono necessariamente essere univoci in quanto sono specificati nell&apos;interfaccia di selezione delle scene. Se si prevede di utilizzare la funzione showSceneNamed(), verificare che non vi siano scene con lo stesso nome.</string>
				<key>moreInfoUrlPath</key>
				<string>#sceneNames</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.currentSceneName()</string>
				<key>heading</key>
				<string>hypeDocument.currentSceneName()</string>
				<key>description</key>
				<string>Restituisce il valore di stringa della scena visualizzata.</string>
				<key>moreInfoUrlPath</key>
				<string>#currentSceneName</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.showSceneNamed()</string>
				<key>heading</key>
				<string>hypeDocument.showSceneNamed(sceneName, optionalTransition, optionalDuration)</string>
				<key>description</key>
				<string>Passa alla scena specificata. Se non è specificato optionalTransition, verrà applicata di default la transizione istantanea. &lt;br&gt;&lt;br&gt;Costanti di transizione valide:	&lt;div class=&quot;constants&quot;&gt;hypeDocument.kSceneTransitionInstant&lt;br&gt;hypeDocument.kSceneTransitionCrossfade&lt;br&gt;hypeDocument.kSceneTransitionSwap&lt;br&gt;hypeDocument.kSceneTransitionPushLeftToRight&lt;br&gt;hypeDocument.kSceneTransitionPushRightToLeft&lt;br&gt;hypeDocument.kSceneTransitionPushBottomToTop&lt;br&gt;hypeDocument.kSceneTransitionPushTopToBottom&lt;br&gt;&lt;br&gt;facoltativo: la durata è espressa in secondi; il valore di default è 1.1.</string>
				<key>codeInsertion</key>
				<string>hypeDocument.showSceneNamed(&apos;sceneName&apos;, hypeDocument.kSceneTransitionCrossfade, 1.1)</string>
				<key>moreInfoUrlPath</key>
				<string>#showSceneNamed</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.showNextScene()</string>
				<key>heading</key>
				<string>hypeDocument.showNextScene(optionalTransition, optionalDuration)</string>
				<key>description</key>
				<string>Mostra la scena successiva in base all&apos;ordine indicato nell&apos;interfaccia di selezione delle scene. Se non è specificato optionalTransition, verrà applicata di default la transizione istantanea. &lt;br&gt;&lt;br&gt;Costanti di transizione valide:	&lt;div class=&quot;constants&quot;&gt;hypeDocument.kSceneTransitionInstant&lt;br&gt;hypeDocument.kSceneTransitionCrossfade&lt;br&gt;hypeDocument.kSceneTransitionSwap&lt;br&gt;hypeDocument.kSceneTransitionPushLeftToRight&lt;br&gt;hypeDocument.kSceneTransitionPushRightToLeft&lt;br&gt;hypeDocument.kSceneTransitionPushBottomToTop&lt;br&gt;hypeDocument.kSceneTransitionPushTopToBottom&lt;br&gt;&lt;br&gt;facoltativo: la durata è espressa in secondi; il valore di default è 1.1.</string>
				<key>codeInsertion</key>
				<string>hypeDocument.showNextScene(hypeDocument.kSceneTransitionCrossfade, 1.1)</string>
				<key>moreInfoUrlPath</key>
				<string>#showNextScene</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.showPreviousScene()</string>
				<key>heading</key>
				<string>hypeDocument.showPreviousScene(optionalTransition, optionalDuration)</string>
				<key>description</key>
				<string>Mostra la scena precedente in base all&apos;ordine indicato nell&apos;interfaccia di selezione delle scene. Se non è specificato optionalTransition, verrà applicata di default la transizione istantanea. &lt;br&gt;&lt;br&gt;Costanti di transizione valide:	&lt;div class=&quot;constants&quot;&gt;hypeDocument.kSceneTransitionInstant&lt;br&gt;hypeDocument.kSceneTransitionCrossfade&lt;br&gt;hypeDocument.kSceneTransitionSwap&lt;br&gt;hypeDocument.kSceneTransitionPushLeftToRight&lt;br&gt;hypeDocument.kSceneTransitionPushRightToLeft&lt;br&gt;hypeDocument.kSceneTransitionPushBottomToTop&lt;br&gt;hypeDocument.kSceneTransitionPushTopToBottom&lt;br&gt;&lt;br&gt;facoltativo: la durata è espressa in secondi; il valore di default è 1.1.</string>
				<key>codeInsertion</key>
				<string>hypeDocument.showPreviousScene(hypeDocument.kSceneTransitionCrossfade, 1.1)</string>
				<key>moreInfoUrlPath</key>
				<string>#showPreviousScene</string>
			</dict>
		</array>
	</dict>
	<dict>
		<key>CategoryName</key>
		<string>Layout</string>
		<key>items</key>
		<array>
			<dict>
				<key>codeInsertion</key>
				<string>hypeDocument.layoutsForSceneNamed(&apos;sceneName&apos;)</string>
				<key>title</key>
				<string>hypeDocument.layoutsForSceneNamed()</string>
				<key>heading</key>
				<string>hypeDocument.layoutsForSceneNamed(sceneName)</string>
				<key>description</key>
				<string>Restituisce un elenco di informazioni di layout per una determinata scena. Le informazioni di layout vengono fornite come oggetto con le chiavi seguenti:&lt;div class=&apos;constants&apos;&gt;&apos;name&apos;&lt;br&gt;&apos;breakpoint&apos;&lt;br&gt;&apos;width&apos;&lt;br&gt;&apos;height&apos;</string>
				<key>moreInfoUrlPath</key>
				<string>#hypeDocument.layoutsForSceneNamed</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.currentLayoutName()</string>
				<key>heading</key>
				<string>hypeDocument.currentLayoutName()</string>
				<key>description</key>
				<string>Restituisce il valore di stringa del nome del layout visualizzato.</string>
				<key>moreInfoUrlPath</key>
				<string>#hypeDocument.currentLayoutName</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.showLayoutNamed()</string>
				<key>heading</key>
				<string>hypeDocument.showLayoutNamed(layoutName)</string>
				<key>description</key>
				<string>Viene immediatamente applicato il layout specificato nella scena attuale. Può essere ripristinato il layout precedente in occasione di un ridimensionamento, di un cambio di scena o di una chiamata relayoutIfNecessary().&lt;br&gt;&lt;br&gt;Per forzare l&apos;applicazione di un layout specifico, utilizzare l&apos;infrastruttura HYPE_eventListeners per mettersi in ascolto degli eventi &quot;HypeLayoutRequest&quot; e restituire un nome di layout diverso dalla richiamata.</string>
				<key>codeInsertion</key>
				<string>hypeDocument.showLayoutNamed(&apos;layoutName&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#hypeDocument.showLayoutNamed</string>
			</dict>
		</array>
		<key>proOnly</key>
		<true/>
	</dict>
	<dict>
		<key>CategoryName</key>
		<string>Sequenze temporali</string>
		<key>items</key>
		<array>
			<dict>
				<key>title</key>
				<string>hypeDocument.startTimelineNamed()</string>
				<key>heading</key>
				<string>hypeDocument.startTimelineNamed(timelineName, direction)</string>
				<key>description</key>
				<string>Avvia la sequenza temporale specificata dall&apos;inizio per la scena corrente. Nota: le sequenze temporali sono definite dall&apos;utente, pertanto non è richiesto che siano univoche. Se si prevede di utilizzare questa funzione, verificare che non vi siano sequenze temporali con lo stesso nome.&lt;br&gt;&lt;br&gt;Verso di riproduzione della sequenza temporale:	&lt;div class=&quot;constants&quot;&gt;hypeDocument.kDirectionForward&lt;br&gt;hypeDocument.kDirectionReverse</string>
				<key>codeInsertion</key>
				<string>hypeDocument.startTimelineNamed(&apos;timelineName&apos;, hypeDocument.kDirectionForward)</string>
				<key>moreInfoUrlPath</key>
				<string>#startTimelineNamed</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.pauseTimelineNamed()</string>
				<key>heading</key>
				<string>hypeDocument.pauseTimelineNamed(timelineName)</string>
				<key>description</key>
				<string>Mette in pausa la sequenza temporale specificata per la scena corrente. Nota: le sequenze temporali sono definite dall&apos;utente, pertanto non è richiesto che siano univoche. Se si prevede di utilizzare questa funzione, verificare che non vi siano sequenze temporali con lo stesso nome.</string>
				<key>codeInsertion</key>
				<string>hypeDocument.pauseTimelineNamed(&apos;timelineName&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#pauseTimelineNamed</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.continueTimelineNamed()</string>
				<key>heading</key>
				<string>hypeDocument.continueTimelineNamed(timelineName, direction, canRestartTimeline)</string>
				<key>description</key>
				<string>Continua la sequenza temporale specificata dal momento dell&apos;interruzione per la scena corrente. Nota: le sequenze temporali sono definite dall&apos;utente, pertanto non è richiesto che siano univoche. Se si prevede di utilizzare questa funzione, verificare che non vi siano sequenze temporali con lo stesso nome.&lt;br&gt;&lt;br&gt;Di default l&apos;azione &quot;continua&quot; non riavvierà la sequenza temporale se questa è al termine; per modificare questo comportamento passare il valore true a canRestartTimeline.&lt;br&gt;&lt;br&gt;Direzione di riproduzione della sequenza temporale:	&lt;div class=&quot;constants&quot;&gt;hypeDocument.kDirectionForward&lt;br&gt;hypeDocument.kDirectionReverse</string>
				<key>codeInsertion</key>
				<string>hypeDocument.continueTimelineNamed(&apos;timelineName&apos;, hypeDocument.kDirectionForward, false)</string>
				<key>moreInfoUrlPath</key>
				<string>#continueTimelineNamed</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.goToTimeInTimelineNamed()</string>
				<key>heading</key>
				<string>hypeDocument.goToTimeInTimelineNamed(timeInSeconds, timelineName)</string>
				<key>description</key>
				<string>Passa alla sequenza temporale specificata per la scena corrente. Nota: le sequenze temporali sono definite dall&apos;utente, pertanto non è richiesto che siano univoche. Se si prevede di utilizzare questa funzione, verificare che non vi siano sequenze temporali con lo stesso nome.</string>
				<key>codeInsertion</key>
				<string>hypeDocument.goToTimeInTimelineNamed(0, &apos;timelineName&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#goToTimeInTimelineNamed</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.currentTimeInTimelineNamed()</string>
				<key>heading</key>
				<string>hypeDocument.currentTimeInTimelineNamed(timelineName)</string>
				<key>description</key>
				<string>Restituisce il momento corrente della sequenza temporale, specificato in secondi.</string>
				<key>codeInsertion</key>
				<string>hypeDocument.currentTimeInTimelineNamed(&apos;timelineName&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#currentTimeInTimelineNamed</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.durationForTimelineNamed()</string>
				<key>heading</key>
				<string>hypeDocument.durationForTimelineNamed(timelineName)</string>
				<key>description</key>
				<string>Restituisce la durata della sequenza temporale, specificata in secondi.</string>
				<key>codeInsertion</key>
				<string>hypeDocument.durationForTimelineNamed(&apos;timelineName&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#durationForTimelineNamed</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.currentDirectionForTimelineNamed()</string>
				<key>heading</key>
				<string>hypeDocument.currentDirectionForTimelineNamed(timelineName)</string>
				<key>description</key>
				<string>Restituisce il verso di riproduzione della sequenza temporale specificata.
&lt;br&gt;&lt;br&gt;Valori restituiti possibili:	&lt;div class=&quot;constants&quot;&gt;hypeDocument.kDirectionForward&lt;br&gt;hypeDocument.kDirectionReverse</string>
				<key>codeInsertion</key>
				<string>hypeDocument.currentDirectionForTimelineNamed(&apos;timelineName&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#currentDirectionForTimelineNamed</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.isPlayingTimelineNamed()</string>
				<key>heading</key>
				<string>hypeDocument.isPlayingTimelineNamed(timelineName)</string>
				<key>description</key>
				<string>Restituisce vero se la sequenza temporale è in riproduzione, falso in caso contrario.</string>
				<key>codeInsertion</key>
				<string>hypeDocument.isPlayingTimelineNamed(&apos;timelineName&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#isPlayingTimelineNamed</string>
			</dict>
		</array>
	</dict>
	<dict>
		<key>CategoryName</key>
		<string>Symboli</string>
		<key>items</key>
		<array>
			<dict>
				<key>title</key>
				<string>hypeDocument.getSymbolInstanceById()</string>
				<key>heading</key>
				<string>hypeDocument.getSymbolInstanceById(id)</string>
				<key>description</key>
				<string>Restituisce l&apos;istanza symbolInstance dell&apos;elemento specificato.&lt;br&gt;&lt;br&gt;L&apos;istanza del simbolo può essere utilizzata per controllare le sequenze temporali del simbolo. Per ulteriori informazioni vedere la sezione Istanze del simbolo.</string>
				<key>codeInsertion</key>
				<string>hypeDocument.getSymbolInstanceById(&apos;id&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#getSymbolInstanceById</string>
			</dict>
			<dict>
				<key>title</key>
				<string>hypeDocument.getSymbolInstancesByName()</string>
				<key>heading</key>
				<string>hypeDocument.getSymbolInstancesByName(symbolName)</string>
				<key>description</key>
				<string>Restituisce tutte le istanze symbolInstances con il nome specificato. È possibile trovare il nome di un simbolo nella libreria dei simboli.&lt;br&gt;&lt;br&gt;L&apos;istanza del simbolo può essere utilizzata per controllare le sequenze temporali del simbolo. Per ulteriori informazioni vedere la sezione Istanze del simbolo.</string>
				<key>codeInsertion</key>
				<string>hypeDocument.getSymbolInstancesByName(&apos;symbolName&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#getSymbolInstancesByName</string>
			</dict>
		</array>
		<key>proOnly</key>
		<true/>
	</dict>
	<dict>
		<key>CategoryName</key>
		<string>Istanze del simbolo</string>
		<key>items</key>
		<array>
			<dict>
				<key>title</key>
				<string>symbolInstance.getSymbolInstancesByName()</string>
				<key>heading</key>
				<string>symbolInstance.getSymbolInstancesByName(symbolName)</string>
				<key>description</key>
				<string>Restituisce tutte le istanze symbolInstances con il nome specificato che sono figli di symbolInstance.element(). È possibile trovare il nome di un simbolo nella libreria dei simboli.</string>
				<key>codeInsertion</key>
				<string>symbolInstance.getSymbolInstancesByName(&apos;symbolName&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#getSymbolInstancesByNameSymbol</string>
			</dict>
			<dict>
				<key>title</key>
				<string>symbolInstance.symbolName()</string>
				<key>heading</key>
				<string>symbolInstance.symbolName()</string>
				<key>description</key>
				<string>Restituisce il nome del simbolo.</string>
				<key>moreInfoUrlPath</key>
				<string>#symbolName</string>
			</dict>
			<dict>
				<key>title</key>
				<string>symbolInstance.element()</string>
				<key>heading</key>
				<string>symbolInstance.element()</string>
				<key>description</key>
				<string>Restituisce l&apos;elemento che rappresenta il simbolo.</string>
				<key>moreInfoUrlPath</key>
				<string>#element-symbol</string>
			</dict>
			<dict>
				<key>title</key>
				<string>symbolInstance.startTimelineNamed()</string>
				<key>heading</key>
				<string>symbolInstance.startTimelineNamed(timelineName, direction)</string>
				<key>description</key>
				<string>Avvia la sequenza temporale specificata dall&apos;inizio per il simbolo. Nota: le sequenze temporali sono definite dall&apos;utente, pertanto non è richiesto che siano univoche. Se si prevede di utilizzare questa funzione, verificare che non vi siano sequenze temporali con lo stesso nome.&lt;br&gt;&lt;br&gt;Verso di riproduzione della sequenza temporale:	&lt;div class=&quot;constants&quot;&gt;hypeDocument.kDirectionForward&lt;br&gt;hypeDocument.kDirectionReverse</string>
				<key>codeInsertion</key>
				<string>symbolInstance.startTimelineNamed(&apos;timelineName&apos;, hypeDocument.kDirectionForward)</string>
				<key>moreInfoUrlPath</key>
				<string>#startTimelineNamedSymbol</string>
			</dict>
			<dict>
				<key>title</key>
				<string>symbolInstance.pauseTimelineNamed()</string>
				<key>heading</key>
				<string>symbolInstance.pauseTimelineNamed(timelineName)</string>
				<key>description</key>
				<string>Mette in pausa la sequenza temporale specificata per il simbolo. Nota: le sequenze temporali sono definite dall&apos;utente, pertanto non è richiesto che siano univoche. Se si prevede di utilizzare questa funzione, verificare che non vi siano sequenze temporali con lo stesso nome.</string>
				<key>codeInsertion</key>
				<string>symbolInstance.pauseTimelineNamed(&apos;timelineName&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#pauseTimelineNamedSymbol</string>
			</dict>
			<dict>
				<key>title</key>
				<string>symbolInstance.continueTimelineNamed()</string>
				<key>heading</key>
				<string>symbolInstance.continueTimelineNamed(timelineName, direction, canRestartTimeline)</string>
				<key>description</key>
				<string>Continua la sequenza temporale specificata dal momento dell&apos;interruzione per il simbolo. Nota: le sequenze temporali sono definite dall&apos;utente, pertanto non è richiesto che siano univoche. Se si prevede di utilizzare questa funzione, verificare che non vi siano sequenze temporali nel simbolo con lo stesso nome.&lt;br&gt;&lt;br&gt;Di default l&apos;azione &quot;continua&quot; non riavvierà la sequenza temporale se questa è al termine; per modificare questo comportamento passare il valore true a canRestartTimeline.&lt;br&gt;&lt;br&gt;Direzione di riproduzione della sequenza temporale:	&lt;div class=&quot;constants&quot;&gt;hypeDocument.kDirectionForward&lt;br&gt;hypeDocument.kDirectionReverse</string>
				<key>codeInsertion</key>
				<string>symbolInstance.continueTimelineNamed(&apos;timelineName&apos;, hypeDocument.kDirectionForward, false)</string>
				<key>moreInfoUrlPath</key>
				<string>#continueTimelineNamedSymbol</string>
			</dict>
			<dict>
				<key>title</key>
				<string>symbolInstance.goToTimeInTimelineNamed()</string>
				<key>heading</key>
				<string>symbolInstance.goToTimeInTimelineNamed(timeInSeconds, timelineName)</string>
				<key>description</key>
				<string>Passa alla sequenza temporale specificata per il simbolo. Nota: le sequenze temporali sono definite dall&apos;utente, pertanto non è richiesto che siano univoche. Se si prevede di utilizzare questa funzione, verificare che non vi siano sequenze temporali con lo stesso nome.</string>
				<key>codeInsertion</key>
				<string>symbolInstance.goToTimeInTimelineNamed(0, &apos;timelineName&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#goToTimeInTimelineNamedSymbol</string>
			</dict>
			<dict>
				<key>title</key>
				<string>symbolInstance.currentTimeInTimelineNamed()</string>
				<key>heading</key>
				<string>symbolInstance.currentTimeInTimelineNamed(timelineName)</string>
				<key>description</key>
				<string>Restituisce il momento corrente della sequenza temporale, specificato in secondi.</string>
				<key>codeInsertion</key>
				<string>symbolInstance.currentTimeInTimelineNamed(&apos;timelineName&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#currentTimeInTimelineNamedSymbol</string>
			</dict>
			<dict>
				<key>title</key>
				<string>symbolInstance.durationForTimelineNamed()</string>
				<key>heading</key>
				<string>symbolInstance.durationForTimelineNamed(timelineName)</string>
				<key>description</key>
				<string>Restituisce la durata della sequenza temporale, specificata in secondi.</string>
				<key>codeInsertion</key>
				<string>symbolInstance.durationForTimelineNamed(&apos;timelineName&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#durationForTimelineNamedSymbol</string>
			</dict>
			<dict>
				<key>title</key>
				<string>symbolInstance.currentDirectionForTimelineNamed()</string>
				<key>heading</key>
				<string>symbolInstance.currentDirectionForTimelineNamed(timelineName)</string>
				<key>description</key>
				<string>Restituisce il verso di riproduzione della sequenza temporale specificata.
&lt;br&gt;&lt;br&gt;Valori restituiti possibili:	&lt;div class=&quot;constants&quot;&gt;hypeDocument.kDirectionForward&lt;br&gt;hypeDocument.kDirectionReverse</string>
				<key>codeInsertion</key>
				<string>symbolInstance.currentDirectionForTimelineNamed(&apos;timelineName&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#currentDirectionForTimelineNamedSymbol</string>
			</dict>
			<dict>
				<key>title</key>
				<string>symbolInstance.isPlayingTimelineNamed()</string>
				<key>heading</key>
				<string>symbolInstance.isPlayingTimelineNamed(timelineName)</string>
				<key>description</key>
				<string>Restituisce vero se la sequenza temporale è in riproduzione, falso in caso contrario.</string>
				<key>codeInsertion</key>
				<string>symbolInstance.isPlayingTimelineNamed(&apos;timelineName&apos;)</string>
				<key>moreInfoUrlPath</key>
				<string>#isPlayingTimelineNamedSymbol</string>
			</dict>
		</array>
		<key>proOnly</key>
		<true/>
	</dict>
	<dict>
		<key>CategoryName</key>
		<string>Eventi di trascinamento</string>
		<key>items</key>
		<array>
			<dict>
				<key>title</key>
				<string>event[&apos;hypeGesturePhase&apos;]</string>
				<key>heading</key>
				<string>event[&apos;hypeGesturePhase&apos;]</string>
				<key>description</key>
				<string>Quando si riceve una richiamata per l&apos;evento &quot;Al trascinamento&quot; con l&apos;azione &quot;Esegui JavaScript…&quot;, l&apos;oggetto dell&apos;evento offre anche informazioni relative al gesto di trascinamento, ovvero se è stato iniziato o concluso, se è stato annullato e se le coordinate sono state aggiornate o meno. Per ottenere tale stato, accedere alla proprietà hypeGesturePhase nell&apos;oggetto dell&apos;evento:
&lt;div class=&quot;constants&quot;&gt;hypeDocument.kHypeGesturePhaseStart&lt;br&gt;hypeDocument.kHypeGesturePhaseMove&lt;br&gt;hypeDocument.kHypeGesturePhaseEnd&lt;br&gt;hypeDocument.kHypeGesturePhaseCancel&lt;/div&gt;</string>
				<key>moreInfoUrlPath</key>
				<string>#hypegesturephase</string>
			</dict>
			<dict>
				<key>title</key>
				<string>event[&apos;hypeGestureXPosition&apos;]</string>
				<key>heading</key>
				<string>event[&apos;hypeGestureXPosition&apos;]</string>
				<key>description</key>
				<string>Restituisce la posizione x corrente di un trascinamento quando si utilizza l&apos;evento &quot;Al trascinamento&quot; con l&apos;azione &quot;Esegui JavaScript…&quot;.</string>
				<key>moreInfoUrlPath</key>
				<string>#hypegesturexposition</string>
			</dict>
			<dict>
				<key>title</key>
				<string>event[&apos;hypeGestureYPosition&apos;]</string>
				<key>heading</key>
				<string>event[&apos;hypeGestureYPosition&apos;]</string>
				<key>description</key>
				<string>Restituisce la posizione y corrente di un trascinamento quando si utilizza l&apos;evento &quot;Al trascinamento&quot; con l&apos;azione &quot;Esegui JavaScript…&quot;.</string>
				<key>moreInfoUrlPath</key>
				<string>#hypegestureyposition</string>
			</dict>
		</array>
	</dict>
</array>
</plist>
